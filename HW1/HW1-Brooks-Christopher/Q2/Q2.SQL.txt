-- initial commands
.headers off
.separator ','

-- (a) Import data
-- [insert sql statement(s) below]
CREATE TABLE flights(
                airline text,
                flight_number integer,
                origin_airport text,
                destination_airport text,
                departure_delay integer,
                distance integer,
                arrival_delay integer
                );

.import flights.csv flights

CREATE TABLE airports(
                    airport_code text,
                    airport text,
                    city text,
                    state test,
                    latitude real,
                    longitude real
                    );

.import airports.csv airports

CREATE TABLE airlines(
                    airline_code text,
                    airline text
                    );

.import airlines.csv airlines

-- (b) Build indexes
-- [insert sql statement(s) below]
create index flights_airline_index on flights(airline);
create index flights_origin_index on flights(origin_airport);
create index flights_destination_index on flights(destination_airport);
create index airport_aiport_index on airports(airport_code);
create index airlines_airline_index on airlines(airline_code);


-- (c) Quick computations.
-- [insert sql statement(s) below]
select count(flight_number) as count_flights_arriving_at_sea
from flights
where destination_airport = 'SEA' and arrival_delay > 20;

select count(flight_number) as count_flights_departing_from_sfo
from flights
where origin_airport = 'SFO' and departure_delay >20;

select '';

-- (d) Average delay of flights per airline
-- [insert sql statement(s) below]
select airlines.airline as airline_name, AVG(flights.arrival_delay) as avg_arrival_delay
from flights inner join airlines on flights.airline = airlines.airline_code
group by airlines.airline
order by AVG(flights.arrival_delay ) DESC
limit 5;

select '';
-- (e) Airlines at each airport
-- [insert sql statement(s) below]
select airports.airport as airport_name, airlines.airline
from flights
    join airports on flights.origin_airport = airports.airport_code
    join airlines on flights.airline = airlines.airline_code
group by airports.airport, airlines.airline
order by airports.airport, airlines.airline
limit 30;


select '';

-- (f) Percentage of delayed flights
-- [insert sql statement(s) below]

select delayed.airport as airport_name, CAST(delayed.delayed_count as real)/(all_flights.a_count)* 100 as percentage
from (select airports.airport as airport, count(airports.airport)  as delayed_count
         from airports inner join flights on airports.airport_code = flights.destination_airport
         where flights.arrival_delay > 30
         group by airports.airport --, flights.flight_number
         --having flights.arrival_delay > 30
         order by airports.airport--, --flights.flight_number DESC

     ) as delayed INNER JOIN (
                        select airports.airport as airport, count(airports.airport) as  a_count
         from airports inner join flights on airports.airport_code = flights.destination_airport
         --where flights.arrival_delay > 30
         group by airports.airport --, flights.flight_number
         --having flights.arrival_delay > 30
         order by airports.airport
        ) as all_flights on delayed.airport = all_flights.airport

group by delayed.airport
order by delayed.airport
limit 20;

select '';

-- (g) Creating a view
-- [insert sql statement(s) below]
CREATE VIEW airport_distances(airport1_name,airport2_name,distance)
AS
select airports1.airport as airport1_name, airports2.airport as airport2_name, (airports1.latitude - airports2.latitude)*(airports1.latitude - airports2.latitude) as distance
from airports as airports1 INNER JOIN airports as airports2 on airports1.airport <> airports2.airport
where airports1.airport < airports2.airport
order by airports1.airport, airports2.airport;

select airport1_name, airport2_name,distance
from airport_distances
order by distance DESC
limit 10;

select '';

-- (h) Count total pairs
-- [insert sql statement(s) below]
select count(airport1_name)
from airport_distances;

select '';

-- (i) Create and import data into FTS table movie_overview.
-- [insert sql statement(s) below]
CREATE VIRTUAL TABLE movie_overview USING fts4(
  id integer,
  name text,
  year integer,
  overview text,
  popularity decimal
);


.import movie-overview.txt movie_overview

-- (i) part 1
-- [insert sql statement(s) below]
select count(name) from movie_overview
where overview Like 'When%';

select '';

-- (i) part 2
-- [insert sql statement(s) below]
select id from movie_overview
where overview MATCH 'love NEAR/7 hate'
order by id ASC;
